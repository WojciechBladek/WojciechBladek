name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch: # MANUAL TRIGGER

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  run-tests:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.17.1
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').packages['node_modules/@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Cache node_modules
        uses: actions/cache@v3
        id: node-cache
        with:
          path: |
            node_modules
          key: node_modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      # - name: Install Testmo
      #   run: npm install --no-save @testmo/testmo-cli
      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Create auth files for gmail tester
        run: |
          echo "${{ secrets.TOKEN }}" > token.json
          echo "${{ secrets.CREDENTIALS }}" > credentials.json
      - name: decode and save
        run: |
          echo "${{ secrets.ENV }}" > .env
      - name: Run Playwright tests
        run:
          npm run test
          # npx testmo automation:run:submit \
          #   --instance "$TESTMO_URL" \
          #   --project-id 1 \
          #   --name "Playwright test run-$(date +'%Y-%m-%dT%H-%M-%S')" \
          #   --source "frontend" \
          #   --results playwright-report/*.xml \
          #   -- npm run test
        # env:
        #   TESTMO_URL: ${{ secrets.TESTMO_URL }}
        #   TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}
      - name: Archive test results
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            playwright-report/**/*.*
            test-results/**/*.*
      - name: Publish test report
        if: success() || failure()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: './playwright-report/results.xml'
      - name: Save cache always
        id: save-playwright-cache
        if: always()
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
